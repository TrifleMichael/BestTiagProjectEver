Klasa wierzchołka

class node:
	def __init__(self):
  	self.etykieta = "a"
    self.indeks = 1
    self.edges = [(2, "etykieta1"), (3, "etykieta2")]
    
  ---------------------- IN graf:
  Notacja pliku wejściowego z grafem
  
# indeks = wiersz zapisu wierzchołka w txt wsadowym
# etykieta = lista wierzchołków do których wchodzą krawędzie
a = [1, 3]
b = [2]
c = []
d = []
a = 

------------------------ produkcje SPO:
Notacja produkcji

[[produkca a]]
a = [1]
b = [0]

a = []
[[fajna zajbista produkcja]]
a = [1]
b = [0]

a = []
-------------------------
Podział ról

1) Parsing inputu + przekształcenie do naszej reprezentacji grafu Szymon
2) GUI Michał
3) Działanie produkcji Kuba + Filip


------------------------
1. Jaka forma danych wsadowych (grafu i produkcji)? Plik txt do załadowania na starcie wydaje się najprostszy/intuicyjny

- index i etykieta (wierzchołek)
- para wierzchołków i etykieta (krawędź)
- produkcje mają swoje numerki, którymi są uruchamiane

2. Jaka forma przechowywania grafu? Lista wierzchołków pozwala na najprostsze przechowywanie dodatkowych informacji, więc spodziewam się że to to

- jak wyżej

3. Czy wykonanie produkcji ma być wizualizowane krok po kroku, czy cała produkcja na raz?

- Program ma zawierać:
- Wizualicja grafu
- Wizualizacji produkcji (chyba jako podgrafu wejściowego i wyjściowego)
- Wierzchołki jako parametr produkcji (gdzie zacząć)

4. Czy konsola jest ok do komunikacji z użytkownikiem (oprócz wizualizacji w oknie graficznym)

- tak